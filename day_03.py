"""Day_03.ipynb
Automatically generated by Colab.
Original file is located at
    https://colab.research.google.com/drive/1KHgAhbwJP7N9HgvHqzGcOVjVhEylDOf6
"""

#capitalize()	Converts the first character to upper case
my_str = "python"
capital_str = my_str.capitalize()
print(capital_str)

#casefold()	Converts string into lower case
my_str = "Hello, World"
a = my_str.casefold()
print(a)

#center()	Returns a centered string
my_str = "Hello World"
a = my_str.center(20)
print(a)

#count()	Returns the number of times a specified value occurs in a string
my_str = "Hello, world"
a = my_str.count("l")
print(a)

#encode()	Returns an encoded version of the string
my_str = "hello world"
a = my_str.encode()
print(a)

#endswith()	Returns true if the string ends with the specified value
my_str =  "hello, world"
a = my_str.endswith("d")
print(a)

#expandtabs()	Sets the tab size of the string
my_str =  "h\te\tl\tl\to"
a = my_str.expandtabs(1)
print(a)

#find()	Searches the string for a specified value and returns the position of where it was found
my_str =  "hello"
a = my_str.find("h")
print(a)

#format()	Formats specified values in a string
txt = "For only {price:.2f} dollars!"
print(txt.format(price = 49))

#index()	Searches the string for a specified value and returns the position of where it was found
txt = "sonali"
a = txt.index("o")
print(a)

#isalnum()	Returns True if all characters in the string are alphanumeric
#the isalnum() method returns True if all the characters in the string are either alphabets or numbers.
txt = " sona1718"
a = txt.isalnum()
print(a)

#isalpha()	Returns True if all characters in the string are in the alphabet
#The isalpha() method returns True if all the characters in the string are alphabets,
txt = "sona1718"
a = txt.isalpha()
print(a)

#isascii()	Returns True if all characters in the string are ascii characters
txt = "sona1718"
a = txt.isascii()
print(a)

#isdecimal()	Returns True if all characters in the string are decimals
txt = "1718"
a = txt.isdecimal()
print(a)

#isdigit()	Returns True if all characters in the string are digits
txt = "sona1718"
a = txt.isdigit()
print(a)

#isidentifier()	Returns True if the string is an identifier
txt = "sona 1718"
a = txt.isidentifier()
print(a)

#islower()	Returns True if all characters in the string are lower case
txt = "Sona1718"
a = txt.islower()
print(a)

#isnumeric()	Returns True if all characters in the string are numeric
txt = "1718"
a = txt.isnumeric()
print(a)

#isprintable()	Returns True if all characters in the string are printable
txt = "  "
a = txt.isprintable()
print(a)

#isspace()	Returns True if all characters in the string are whitespaces
txt = "  "
a = txt.isspace()
print(a)

#istitle()	Returns True if the string follows the rules of a title
txt = " Sonali"
a = txt.istitle()
print(a)

#isupper()	Returns True if all characters in the string are upper case
txt = " SONA"
a = txt.isupper()
print(a)

#join()	Joins the elements of an iterable to the end of the string
my_tup = ("a","b","c")
a = "-".join(my_tup)
print(a)

#ljust()	Returns a left justified version of the string
txt = " blue"
a = txt.ljust(10)
print(a,"is my fav color")

#lower()	Converts a string into lower case
txt = "SONA"
a = txt.lower()
print(a)

#lstrip()	Returns a left trim version of the string
txt = "     blue     "
x = txt.lstrip()
print("of all colors", x, "is my favorite")

#maketrans()	Returns a translation table to be used in translations
txt = "Hello Sam!"
mytable = str.maketrans("S", "P")
print(txt.translate(mytable))

#partition()	Returns a tuple where the string is parted into three parts
txt = "I could eat mango all day"
x = txt.partition("eat")
print(x)

#replace()	Returns a string where a specified value is replaced with a specified value
txt = "i like mango"
x = txt.replace("mango","grapes")
print(x)

#rfind()	Searches the string for a specified value and returns the last position of where it was found
txt = "i like mango"
x = txt.rfind("mango")
print(x)

#rindex()	Searches the string for a specified value and returns the last position of where it was found
txt = "i like mango"
x = txt.rindex("like")
print(x)

#rjust()	Returns a right justified version of the string
txt = "i like mango"
x = txt.rjust(10)
print(x)

#rpartition()	Returns a tuple where the string is parted into three parts
txt = "i like mango"
x = txt.rpartition("like")
print(x)

#rsplit()	Splits the string at the specified separator, and returns a list
txt = "i like mango"
x = txt.rsplit("like")
print(x)

#rstrip()	Returns a right trim version of the string
txt = "     mango     "
x = txt.rstrip()
print("of all fruits", x, "is my favorite")

#split()	Splits the string at the specified separator, and returns a list
txt = "i like mango"
x = txt.split("mango")
print(x)

#splitlines()	Splits the string at line breaks and returns a list
txt = "i like mango"
x = txt.splitlines()
print(x)

#startswith()	Returns true if the string starts with the specified value
txt = "i like mango"
x = txt.startswith("i")
print(x)

#strip()	Returns a trimmed version of the string
txt = "i like mango"
x = txt.strip("i")
print(x)

#swapcase()	Swaps cases, lower case becomes upper case and vice versa
txt = "i like mango"
x = txt.swapcase()
print(x)

#title()	Converts the first character of each word to upper case
txt = "i like mango"
x = txt.title()
print(x)

#translate()	Returns a translated string
mydict = {83:  0}
txt = "Hello mpp!"
print(txt.translate(mydict))

#upper()	Converts a string into upper case
txt = "i like mango"
x = txt.upper()
print(x)

#zfill()	Fills the string with a specified number of 0 values at the beginning
txt = "50"
x = txt.zfill(5)
print(x)
